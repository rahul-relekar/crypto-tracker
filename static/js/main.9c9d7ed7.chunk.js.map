{"version":3,"sources":["Coin.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","textAlign","backgroundColor","color","height","paperImg","display","alignItems","paddingRight","minWidth","image","width","marginRight","name","fontSize","Coin","symbol","price","volume","priceChange","marketcap","classes","className","Grid","container","item","xs","Paper","src","alt","toLocaleString","toFixed","box","flexDirection","justifyContent","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","console","log","catch","error","filteredCoins","filter","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c9d7ed7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Coin.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    color: \"white\",\r\n    // backgroundColor: \"white\",\r\n    height: \"80px\",\r\n  },\r\n  paperImg:{\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingRight: \"24px\",\r\n    minWidth: \"300px\",\r\n    height: \"80px\",\r\n    backgroundColor: \"transparent\"\r\n  },\r\n  image: {\r\n    height: \"30px\",\r\n    width: \"30px\",\r\n    marginRight: \"10px\",\r\n  },\r\n  name: {\r\n    fontSize: \"16px\",\r\n    width: \"150px\",\r\n  },\r\n}));\r\n\r\nconst Coin = ({\r\n  name,\r\n  image,\r\n  symbol,\r\n  price,\r\n  volume,\r\n  priceChange,\r\n  marketcap,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"coin-container\">\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={2}>\r\n          <Paper className={classes.paperImg}>\r\n            <img className={classes.image} src={image} alt=\"crypto\" />\r\n            <h1 className={classes.name}>{name}</h1>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <Paper className={classes.paper}>\r\n            <p className=\"coin-symbol\">{symbol}</p>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={1.5}>\r\n          <Paper className={classes.paper}>\r\n            <p className=\"coin-price\">HKD {price}</p>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={2.2}>\r\n          <Paper className={classes.paper}>\r\n            <p className=\"coin-volume\">HKD {volume.toLocaleString()}</p>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <Paper className={classes.paper}>\r\n            {priceChange < 0 ? (\r\n              <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\r\n            ) : (\r\n              <p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Paper className={classes.paper}>\r\n            <p className=\"coin-marketcap\">Mkt Cap: HKD {marketcap.toLocaleString()}</p>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* <div className=\"coin-row\">\r\n        <div className=\"coin\">\r\n          <img src={image} alt=\"crypto\" />\r\n          <h1>{name}</h1>\r\n          <p className=\"coin-symbol\">{symbol}</p>\r\n        </div>\r\n\r\n        <div className=\"coin-data\">\r\n          <p className=\"coin-price\">HKD {price}</p>\r\n          <p className=\"coin-volume\">HKD {volume.toLocaleString()}</p>\r\n          {priceChange < 0 ? (\r\n            <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\r\n          ) : (\r\n            <p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>\r\n          )}\r\n\r\n          <p className=\"coin-marketcap\">HKD {marketcap.toLocaleString()}</p>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Coin from \"./Coin\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    backgroundColor: \"transparent\",\n    // color:\"white\",\n    // width: \"900px\",\n  },\n  name: {\n    fontSize: \"16px\",\n    width: \"150px\",\n  },\n  box: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"80px\",\n    // border-bottom: 1px solid #d7d7d7;\n    // width: \"1500px\",\n  },\n}));\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const classes = useStyles();\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=hkd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\n      )\n      .then((res) => {\n        setCoins(res.data)\n        console.log(coins);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const filteredCoins = coins.filter((coin) =>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const columns = [\n    { field: \"id\", hide: true },\n    // { field: \"image\",headerName: \"ICON\" },\n    { field: \"name\", headerName: \"NAME\", width: 200 },\n    { field: \"symbol\", headerName: \"SYMBOL\", width: 150 },\n    { field: \"current_price\", headerName: \"PRICE (HKD)\", width: 200 },\n    { field: \"total_volume\", headerName: \"VOLUME(HKD)\", width: 200 },\n    { field: \"price_change_percentage_24h\", headerName: \"PRICE CHANGE(%)\", width: 200 },\n    { field: \"market_cap\", headerName: \"MARKET CAP(HKD)\", width: 200 },\n  ];\n\n  const rows = [\n    {\n      id: 1,\n      name: 1,\n      symbol: \"Snow\",\n      price: \"Jon\",\n      volume: 35,\n      price_change: 1,\n      market_limit: 1,\n    },\n  ];\n\n  return (\n    <div className=\"coin-app\">\n      \n      <div className=\"coin-search\">\n        {/* Search bar */}\n        <h1 className=\"coin-text\"> Search your crypto</h1>\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"coin-input\"\n            onChange={handleChange}\n          />\n        </form>\n      </div>\n\n      {/* <div className={classes.box}>\n        <Grid container spacing={3}>\n          <Grid item xs={1.5}>\n            <Paper className={classes.paper}>\n              <h1 className={classes.name}>NAME</h1>\n            </Paper>\n          </Grid>\n          <Grid item xs={1.2}>\n            <Paper className={classes.paper}>\n              <h1 className={classes.name}>SYMBOL</h1>\n            </Paper>\n          </Grid>\n          <Grid item xs={2}>\n            <Paper className={classes.paper}>\n              <h1 className={classes.name}>PRICE</h1>\n            </Paper>\n          </Grid>\n          <Grid item xs={2.5}>\n            <Paper className={classes.paper}>\n              <h1 className={classes.name}>VOLUME</h1>\n            </Paper>\n          </Grid>\n          <Grid item xs={1}>\n            <Paper className={classes.paper}>\n              <h1 className={classes.name}>CHANGE</h1>\n            </Paper>\n          </Grid>\n          <Grid item xs={2}>\n            <Paper className={classes.paper}>\n              <h1 className={classes.name}>MARKET CAP</h1>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div> */}\n\n      {/* API display from gecko */}\n      {filteredCoins.map((coin) => {\n        return (\n          <Coin\n            key={coin.id}\n            name={coin.name}\n            image={coin.image}\n            symbol={coin.symbol}\n            marketcap={coin.market_cap}\n            price={coin.current_price}\n            priceChange={coin.price_change_percentage_24h}\n            volume={coin.total_volume}\n          />\n        );\n      })}\n      {/* <div style={{ height: 900, width: \"61%\" }}>\n        \n        <DataGrid\n          rows={coins}          \n          columns={columns}\n          pageSize={50}\n          checkboxSelection={false}\n          loading ={true}\n        />\n        \n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}